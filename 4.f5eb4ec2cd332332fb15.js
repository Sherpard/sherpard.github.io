(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{AMZ2:function(t,e,i){"use strict";i.r(e),i.d(e,"SnakeGameModule",function(){return v});var s=i("1lC5"),n=i("ofXK"),o=i("tyNb"),r=i("XNiG");class a{constructor(t,e){this.width=t,this.height=e,this.tiles=[],this.setupBoard()}setupBoard(){for(let t=0;t<this.width;t++)for(let e=0;e<this.height;e++)0===e&&(this.tiles[t]=[]),this.tiles[t][e]=0===t||t===this.width-1||0===e||e===this.height-1?h.WALL:h.EMPTY_SPACE}getHeight(){return this.height}getWidth(){return this.width}getTile(t){if(void 0===this.tiles[t.x]||void 0===this.tiles[t.x][t.y])throw Error("Invalid Tile");return this.tiles[t.x][t.y]}}var h=function(t){return t[t.EMPTY_SPACE=0]="EMPTY_SPACE",t[t.WALL=1]="WALL",t}({});class c{constructor(t){this.DRAW_COORDINATES=!1,this.DRAW_BORDERS=!1,this.DRAW_APPLE_COORDINATES=!1,this.canvas=t;const e=t.getContext("2d");if(null===e)throw Error("Context is null");this.context=e}drawRestart(t){this.context.font="46px sans-serif",this.context.fillStyle="#FF0000";const e=this.context.measureText(t).width/2;this.context.fillText(t,this.canvas.width/2-e,this.canvas.height/3*2)}drawFrame(t,e,i){this.resize(),this.context.clearRect(0,0,this.canvas.width,this.canvas.height);const s=this.getTileSize(t);this.drawBoard(t,s),this.drawApple(i,s),this.drawSnake(e,s)}drawGameOver(){this.context.font="72px sans-serif",this.context.fillStyle="#FF0000";const t=this.context.measureText("Game Over").width/2;this.context.fillText("Game Over",this.canvas.width/2-t,this.canvas.height/2)}getTilePosition(t,e,i=1){const s=e.x*(1-i),n=e.y*(1-i);return{x:t.x*e.x+s/2,y:t.y*e.y+n/2,width:e.x-s,height:e.y-n}}drawSnake(t,e){null!==t&&t.getSnakeCoordinates().map(t=>this.getTilePosition(t,e,.9)).forEach(t=>this.drawTile("#00AA00",t))}drawApple(t,e){null!==t&&(this.drawTile("#FF0000",this.getTilePosition(t,e,.5)),this.DRAW_APPLE_COORDINATES)&&(this.context.font="20px sans-serif",this.context.strokeText(`Apple at: ${t.x}x${t.y}`,0,25))}drawBoard(t,e){this.context.clearRect(0,0,window.innerHeight,window.innerWidth);const i=t.getHeight(),s=t.getWidth();for(let n=0;n<s;n++)for(let s=0;s<i;s++){const i=t.getTile({x:n,y:s}),o=this.getTilePosition({x:n,y:s},e);this.drawTile(i===h.EMPTY_SPACE?"#333":"#000",o)}}resize(){this.canvas.height=window.innerHeight,this.canvas.width=window.innerWidth}getTileSize(t){const e=t.getHeight(),i=t.getWidth(),s=this.canvas.height;return{x:Math.round(this.canvas.width/i),y:Math.round(s/e)}}drawTile(t,e){this.context.fillStyle=t,this.context.strokeStyle="#00FF00",this.context.beginPath(),this.context.rect(e.x,e.y,e.width,e.height),this.context.fill(),this.DRAW_BORDERS&&this.context.stroke(),this.context.closePath(),this.drawCordinates(e)}drawCordinates(t){if(!this.DRAW_COORDINATES)return;this.context.font="16px sans-serif";const e=`${t.x}x${t.y}`;this.context.strokeText(e,t.x,t.y+25),this.context.strokeText(e,t.x,t.y+50)}}var l=function(t){return t[t.NORTH=1]="NORTH",t[t.SOUTH=2]="SOUTH",t[t.EAST=3]="EAST",t[t.WEST=4]="WEST",t}({});function d(t,e){return t.x===e.x&&t.y===e.y}class p{constructor(t){this.map=t,this.directions=[]}restart(){this.directions=[]}requestDirection(t,e){return 0===this.directions.length&&this.searchApple(t,e),this.directions.shift()}shutdown(){}initializeGrid(t){const e=[];for(let i=0;i<this.map.getWidth();i++){e[i]=[];for(let t=0;t<this.map.getHeight();t++)e[i][t]=new u({x:i,y:t})}return t.getSnakeCoordinates().filter(t=>t.x>0&&t.y>0).forEach(t=>e[t.x][t.y].closed=!0),e}searchApple(t,e){const i=this.initializeGrid(t),s=t.getHead();let n=i[e.x][e.y];if(n.equals(i[s.x][s.y])){const e=t.getSnakeCoordinates(),s=e[e.length-1];n=i[s.x][s.y],n.closed=!1}const o=[];for(o.push(i[s.x][s.y]);o.length>0;){let t=0;for(let i=0;i<o.length;i++)o[i].f<o[t].f&&(t=i);const e=o[t];if(e.equals(n)){const t=[];let n=e;for(;void 0!==n.parent;)t.push(n),n=n.parent;this.buildDirections(i[s.x][s.y],t)}o.splice(t,1),e.closed=!0;const r=this.getNeighbors(e,i);for(let i=0;i<r.length;i++){const t=r[i];if(t.closed)continue;const s=e.g+1;let a=!1;t.visited?s<t.g&&(a=!0):(a=!0,t.h=this.manhatanDistance(t.coordinate,n.coordinate),t.visited=!0,o.push(t)),a&&(t.parent=e,t.g=s,t.f=t.g+t.h)}}}manhatanDistance(t,e){return Math.abs(t.x-e.x)+Math.abs(t.y-e.y)}buildDirections(t,e){let i=t;for(;0!==e.length;){const t=e.pop();t.coordinate.x<i.coordinate.x&&this.directions.push(l.EAST),t.coordinate.x>i.coordinate.x&&this.directions.push(l.WEST),t.coordinate.y<i.coordinate.y&&this.directions.push(l.NORTH),t.coordinate.y>i.coordinate.y&&this.directions.push(l.SOUTH),i=t}}getNeighbors(t,e){const i=[],s=t.coordinate.x,n=t.coordinate.y;return e[s-1]&&e[s-1][n]&&i.push(e[s-1][n]),e[s+1]&&e[s+1][n]&&i.push(e[s+1][n]),e[s]&&e[s][n-1]&&i.push(e[s][n-1]),e[s]&&e[s][n+1]&&i.push(e[s][n+1]),i}}class u{constructor(t){this.f=0,this.g=0,this.h=0,this.coordinate=t,this.visited=!1,this.closed=!1}equals(t){return d(this.coordinate,t.coordinate)}}class g extends class{spawnApple(t,e){return this.doAppleSpawn(t,e)}}{constructor(){super(...arguments),this.MAX_ATEMPTS=10}doAppleSpawn(t,e){const i=t.getWidth()-2,s=t.getHeight()-2,n={};let o,r;e.forEach(t=>{void 0===n[t.x]&&(n[t.x]={}),n[t.x][t.y]=1});let a=0;do{if(o=Math.floor(Math.random()*i)+1,r=Math.floor(Math.random()*s)+1,a++,a>this.MAX_ATEMPTS)return null}while(void 0!==n[o]&&1===n[o][r]);return{x:o,y:r}}}class x{constructor(t){this.restartDelay=t,this.initialize()}isRestarted(){return this.getRestartCount()<=0}initialize(){this.nextRestart=new Date,this.nextRestart.setSeconds(this.nextRestart.getSeconds()+ +this.restartDelay)}getRestartMessage(){return`Restarting in ${this.getRestartCount()} seconds`}getRestartCount(){return Math.max(0,(this.nextRestart.getTime()-(new Date).getTime())/1e3)}}class w{constructor(t,e,i=3){this.coordinates=[t];for(let s=1;s<i;s++)this.coordinates.push({x:-1*s,y:-1*s});this.head=t,this.bearing=l.WEST,this.controller=e}getSnakeCoordinates(){return[...this.coordinates]}getHead(){return{x:this.head.x,y:this.head.y}}grow(){const t=this.coordinates.pop()||{x:-10,y:-1};this.coordinates.push(t),this.coordinates.push(t),this.controller.restart()}doTick(t){this.coordinates.pop(),this.moveHead(),this.bearing=this.controller.requestDirection(this,t),this.coordinates.unshift(this.head)}moveHead(){const t={x:this.head.x,y:this.head.y};switch(this.bearing){case l.NORTH:t.y--;break;case l.SOUTH:t.y++;break;case l.WEST:t.x++;break;case l.EAST:t.x--}this.head=t}}class y{constructor(t,e,i){this.width=t,this.heigth=e,this.keyboardEvents=i,this.apple=null,this.stopGame=!0,this.displayGameOver=!1,this.board=new a(t,e),this.snakeController=new p(this.board),this.restartPolicy=new x(1),this.initialize()}initialize(){this.snake=new w({x:this.width/2,y:this.heigth/2},this.snakeController),this.snakeController.restart(),this.appleSpawner=new g,this.spawnApple()}shutdown(){this.stopGame=!0,this.snakeController.shutdown()}doTick(t){if(this.stopGame)return t.drawFrame(this.board,null,null),this.displayGameOver&&t.drawGameOver(),t.drawRestart(this.restartPolicy.getRestartMessage()),void(this.restartPolicy.isRestarted()&&(this.initialize(),this.stopGame=!1));this.snake.doTick(this.apple),this.colisionCheck()?this.gameOver():t.drawFrame(this.board,this.snake,this.apple)}colisionCheck(){const t=this.snake.getHead(),e=[...this.snake.getSnakeCoordinates()];return e.shift(),e.filter(e=>d(e,t)).length>0||this.board.getTile(t)===h.WALL||(null!==this.apple&&d(t,this.apple)&&(this.snake.grow(),this.spawnApple()),!1)}gameOver(){this.stopGame=!0,this.displayGameOver=!0,this.restartPolicy.initialize()}spawnApple(){this.apple=this.appleSpawner.spawnApple(this.board,this.snake.getSnakeCoordinates())}}var f=i("fXoL");const T=["snake"];let m=(()=>{class t{constructor(t){this.ngZone=t,this.gameActive=!0,this.keyboardEventSubject=new r.a,this.gameDirector=new y(128,64,this.keyboardEventSubject.asObservable())}ngAfterViewInit(){this.controller=new c(this.canvas.nativeElement),this.lastTick=(new Date).getTime(),this.ngZone.runOutsideAngular(()=>this.gameLoop())}ngOnDestroy(){this.gameActive=!1,this.keyboardEventSubject.complete(),this.gameDirector.shutdown()}gameLoop(){const t=(new Date).getTime();t-this.lastTick>=16.666666666666668&&(this.gameDirector.doTick(this.controller),this.lastTick=t),this.gameActive&&requestAnimationFrame(()=>this.gameLoop())}keyDown(t){this.keyboardEventSubject.next(t)}}return t.\u0275fac=function(e){return new(e||t)(f.Eb(f.A))},t.\u0275cmp=f.yb({type:t,selectors:[["app-snake-game"]],viewQuery:function(t,e){if(1&t&&f.ec(T,3),2&t){let t;f.Ub(t=f.Qb())&&(e.canvas=t.first)}},hostBindings:function(t,e){1&t&&f.Pb("keypress",function(t){return e.keyDown(t)},!1,f.Vb)},decls:3,vars:0,consts:[[1,"game-board"],["snake",""]],template:function(t,e){1&t&&(f.Jb(0,"div",0),f.Fb(1,"canvas",null,1),f.Ib())},styles:[".game-board[_ngcontent-%COMP%]{position:relative}.game-board[_ngcontent-%COMP%], .game-board[_ngcontent-%COMP%]   canvas[_ngcontent-%COMP%]{height:100%;width:100%}"]}),t})(),v=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=f.Cb({type:t}),t.\u0275inj=f.Bb({imports:[[n.b,o.b.forChild([{path:"",component:m},{path:"",component:null,outlet:"profile"},{path:"",component:s.a,outlet:"skillbar"}])]]}),t})()}}]);